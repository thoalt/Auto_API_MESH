{"content": {"suites": {"0": {"status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_ACT_23458.py"}, "1": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_ACT_6.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "2": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_ACT_7.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "3": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_BAND_WITH_1_STAND_G_INVALID.py", "tests": {"0": {"status": "ERROR", "message": "self = <pages.SettingWirelessPage.WirelessRadioPage object at 0x00000170E3BBD340>, xpath = \"//select[@id='2G_Select_WLAN_Mode']\", text_item = '11g'\n\n    def wait_and_select_item(self, xpath: str, text_item: str):\n        \"\"\"\n        Description: Wait dropdown element element until it is visibility then select one by text item\n        :param xpath:\n        :param text_item:\n        :param time_out:\n        :return:\n        \"\"\"\n        try:\n>           element: WebElement = WebDriverWait(self.driver, self.timeout) \\\n                .until(EC.visibility_of_element_located((By.XPATH, xpath)))\n\nbase\\WEBLib.py:332: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7d6162a7c33a09af579fc2f1100c9bda\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000170E3BBDFD0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.Radio2GEdit.test_RADIO24G_EDIT_BAND_WITH_1_STAND_G_INVALID.Test_radio24G_Edit object at 0x00000170E3BC67C0>\n\n    @pytest.fixture(autouse=True, scope=\"function\")\n    def set_up(self):\n        self.timeOut = 60\n    \n        self.radio24GEditClt = radio24GEditClient()\n        self.radio2GViewClt = radio24GViewClient()\n        self.wrp = WirelessRadioPage(self.driver)\n        # Setting for Radio 2.4G with standard mode NG\n>       self.wrp.setting_Radio(bandW=WIFI_TYPE.T_24G, standard=STANDARD_2G.MOD_G)\n\ntestcase\\Radio2GEdit\\test_RADIO24G_EDIT_BAND_WITH_1_STAND_G_INVALID.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\SettingWirelessPage.py:281: in setting_Radio\n    self.select_Standard2G(standard)\npages\\SettingWirelessPage.py:157: in select_Standard2G\n    self.wait_and_select_item(self.drpStandard2G_xpath, standard)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.SettingWirelessPage.WirelessRadioPage object at 0x00000170E3BBD340>, xpath = \"//select[@id='2G_Select_WLAN_Mode']\", text_item = '11g'\n\n    def wait_and_select_item(self, xpath: str, text_item: str):\n        \"\"\"\n        Description: Wait dropdown element element until it is visibility then select one by text item\n        :param xpath:\n        :param text_item:\n        :param time_out:\n        :return:\n        \"\"\"\n        try:\n            element: WebElement = WebDriverWait(self.driver, self.timeout) \\\n                .until(EC.visibility_of_element_located((By.XPATH, xpath)))\n            drp: Select = Select(element)\n            drp.select_by_visible_text(text_item)\n        except Exception as exc:\n>           raise Exception(\"Element cannot select!\" + \"\\n\" + str(exc))\nE           Exception: Element cannot select!\nE           Message:\n\nbase\\WEBLib.py:337: Exception\n", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "4": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_BAND_WITH_1_STAND_G_VALID.py", "tests": {"0": {"status": "ERROR", "message": "self = <pages.SettingWirelessPage.WirelessRadioPage object at 0x00000170E3CD8160>, xpath = \"//select[@id='2G_Select_WLAN_Mode']\", text_item = '11g'\n\n    def wait_and_select_item(self, xpath: str, text_item: str):\n        \"\"\"\n        Description: Wait dropdown element element until it is visibility then select one by text item\n        :param xpath:\n        :param text_item:\n        :param time_out:\n        :return:\n        \"\"\"\n        try:\n>           element: WebElement = WebDriverWait(self.driver, self.timeout) \\\n                .until(EC.visibility_of_element_located((By.XPATH, xpath)))\n\nbase\\WEBLib.py:332: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ebce2f7c654633a121c33e560f5e0a9c\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000170E3D1C250>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.Radio2GEdit.test_RADIO24G_EDIT_BAND_WITH_1_STAND_G_VALID.Test_radio24G_Edit object at 0x00000170E3D1CC70>\n\n    @pytest.fixture(autouse=True, scope=\"function\")\n    def set_up(self):\n        self.timeOut = 60\n        self.standard = STANDARD_2G.MOD_G\n        self.radio24GEditClt = radio24GEditClient()\n        self.radio2GViewClt = radio24GViewClient()\n    \n        self.client2G = Wifi_lib()\n        self.session = SSH_Lib(SSHShell=self.SSHShell)\n    \n        self.wrp = WirelessRadioPage(self.driver)\n    \n        # Setting for Radio 2.4G with standard mode G\n>       self.wrp.setting_Radio(bandW=WIFI_TYPE.T_24G, standard=self.standard)\n\ntestcase\\Radio2GEdit\\test_RADIO24G_EDIT_BAND_WITH_1_STAND_G_VALID.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\SettingWirelessPage.py:281: in setting_Radio\n    self.select_Standard2G(standard)\npages\\SettingWirelessPage.py:157: in select_Standard2G\n    self.wait_and_select_item(self.drpStandard2G_xpath, standard)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.SettingWirelessPage.WirelessRadioPage object at 0x00000170E3CD8160>, xpath = \"//select[@id='2G_Select_WLAN_Mode']\", text_item = '11g'\n\n    def wait_and_select_item(self, xpath: str, text_item: str):\n        \"\"\"\n        Description: Wait dropdown element element until it is visibility then select one by text item\n        :param xpath:\n        :param text_item:\n        :param time_out:\n        :return:\n        \"\"\"\n        try:\n            element: WebElement = WebDriverWait(self.driver, self.timeout) \\\n                .until(EC.visibility_of_element_located((By.XPATH, xpath)))\n            drp: Select = Select(element)\n            drp.select_by_visible_text(text_item)\n        except Exception as exc:\n>           raise Exception(\"Element cannot select!\" + \"\\n\" + str(exc))\nE           Exception: Element cannot select!\nE           Message:\n\nbase\\WEBLib.py:337: Exception\n", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "5": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_BAND_WITH_1_STAND_NG_INVALID.py", "tests": {"0": {"status": "ERROR", "message": "self = <pages.SettingWirelessPage.WirelessRadioPage object at 0x00000170E3DC88E0>, xpath = \"//select[@id='2G_Select_WLAN_Mode']\", text_item = '11ng'\n\n    def wait_and_select_item(self, xpath: str, text_item: str):\n        \"\"\"\n        Description: Wait dropdown element element until it is visibility then select one by text item\n        :param xpath:\n        :param text_item:\n        :param time_out:\n        :return:\n        \"\"\"\n        try:\n>           element: WebElement = WebDriverWait(self.driver, self.timeout) \\\n                .until(EC.visibility_of_element_located((By.XPATH, xpath)))\n\nbase\\WEBLib.py:332: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2e964cf08850f3ffdb4179a185d1247a\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000170E3DC8190>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.Radio2GEdit.test_RADIO24G_EDIT_BAND_WITH_1_STAND_NG_INVALID.Test_radio24G_Edit object at 0x00000170E3BC9D60>\n\n    @pytest.fixture(autouse=True, scope=\"function\")\n    def set_up(self):\n        self.timeOut = 60\n    \n        self.radio24GEditClt = radio24GEditClient()\n        self.radio2GViewClt = radio24GViewClient()\n        self.wrp = WirelessRadioPage(self.driver)\n        # Setting for Radio 2.4G with standard mode NG\n>       self.wrp.setting_Radio(bandW=WIFI_TYPE.T_24G, standard=STANDARD_2G.MOD_NG)\n\ntestcase\\Radio2GEdit\\test_RADIO24G_EDIT_BAND_WITH_1_STAND_NG_INVALID.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\SettingWirelessPage.py:281: in setting_Radio\n    self.select_Standard2G(standard)\npages\\SettingWirelessPage.py:157: in select_Standard2G\n    self.wait_and_select_item(self.drpStandard2G_xpath, standard)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.SettingWirelessPage.WirelessRadioPage object at 0x00000170E3DC88E0>, xpath = \"//select[@id='2G_Select_WLAN_Mode']\", text_item = '11ng'\n\n    def wait_and_select_item(self, xpath: str, text_item: str):\n        \"\"\"\n        Description: Wait dropdown element element until it is visibility then select one by text item\n        :param xpath:\n        :param text_item:\n        :param time_out:\n        :return:\n        \"\"\"\n        try:\n            element: WebElement = WebDriverWait(self.driver, self.timeout) \\\n                .until(EC.visibility_of_element_located((By.XPATH, xpath)))\n            drp: Select = Select(element)\n            drp.select_by_visible_text(text_item)\n        except Exception as exc:\n>           raise Exception(\"Element cannot select!\" + \"\\n\" + str(exc))\nE           Exception: Element cannot select!\nE           Message:\n\nbase\\WEBLib.py:337: Exception\n", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "6": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_BAND_WITH_1_STAND_NG_VALID.py", "tests": {"0": {"status": "ERROR", "message": "self = <pages.SettingWirelessPage.WirelessRadioPage object at 0x00000170E3D59970>, xpath = \"//select[@id='2G_Select_WLAN_Mode']\", text_item = '11ng'\n\n    def wait_and_select_item(self, xpath: str, text_item: str):\n        \"\"\"\n        Description: Wait dropdown element element until it is visibility then select one by text item\n        :param xpath:\n        :param text_item:\n        :param time_out:\n        :return:\n        \"\"\"\n        try:\n>           element: WebElement = WebDriverWait(self.driver, self.timeout) \\\n                .until(EC.visibility_of_element_located((By.XPATH, xpath)))\n\nbase\\WEBLib.py:332: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"182863852ba34bfe45caed54978570d1\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000170E3E59CA0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\MIMO\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.Radio2GEdit.test_RADIO24G_EDIT_BAND_WITH_1_STAND_NG_VALID.Test_radio24G_Edit object at 0x00000170E3D5FD90>\n\n    @pytest.fixture(autouse=True, scope=\"function\")\n    def set_up(self):\n        self.timeOut = 60\n        self.standard = STANDARD_2G.MOD_NG\n        self.radio24GEditClt = radio24GEditClient()\n        self.radio2GViewClt = radio24GViewClient()\n    \n        self.client2G = Wifi_lib()\n        self.session = SSH_Lib(SSHShell=self.SSHShell)\n    \n        self.wrp = WirelessRadioPage(self.driver)\n>       self.wrp.setting_Radio(bandW=WIFI_TYPE.T_24G, standard=self.standard)\n\ntestcase\\Radio2GEdit\\test_RADIO24G_EDIT_BAND_WITH_1_STAND_NG_VALID.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\SettingWirelessPage.py:281: in setting_Radio\n    self.select_Standard2G(standard)\npages\\SettingWirelessPage.py:157: in select_Standard2G\n    self.wait_and_select_item(self.drpStandard2G_xpath, standard)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.SettingWirelessPage.WirelessRadioPage object at 0x00000170E3D59970>, xpath = \"//select[@id='2G_Select_WLAN_Mode']\", text_item = '11ng'\n\n    def wait_and_select_item(self, xpath: str, text_item: str):\n        \"\"\"\n        Description: Wait dropdown element element until it is visibility then select one by text item\n        :param xpath:\n        :param text_item:\n        :param time_out:\n        :return:\n        \"\"\"\n        try:\n            element: WebElement = WebDriverWait(self.driver, self.timeout) \\\n                .until(EC.visibility_of_element_located((By.XPATH, xpath)))\n            drp: Select = Select(element)\n            drp.select_by_visible_text(text_item)\n        except Exception as exc:\n>           raise Exception(\"Element cannot select!\" + \"\\n\" + str(exc))\nE           Exception: Element cannot select!\nE           Message:\n\nbase\\WEBLib.py:337: Exception\n", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "7": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_BAND_WITH_3456.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO2G_EDIT_BANDWIDTH_1", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "8": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_BAND_WITH_7.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO2G_EDIT_BANDWIDTH_1", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "9": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_BAND_WITH_8.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO2G_EDIT_BANDWIDTH_1", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "10": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_BAND_WITH_9.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO2G_EDIT_BANDWIDTH_1", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "11": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_BOTH_1_STAND_G.py", "tests": {"0": {"status": "ERROR", "message": "self = <testcase.Radio2GEdit.test_RADIO24G_EDIT_BOTH_1_STAND_G.Test_radio24G_Edit object at 0x00000170E3D32F40>\n\n    @pytest.fixture(autouse=True, scope=\"function\")\n    def set_up(self):\n        self.timeOut = 60\n        self.standard = STANDARD_2G.MOD_G\n        self.radio24GEditClt = radio24GEditClient()\n        self.radio2GViewClt = radio24GViewClient()\n        self.client2G = Wifi_lib()\n>       self.session = SSH_Lib(SSHShell=self.SSHShell)\nE       AttributeError: 'Test_radio24G_Edit' object has no attribute 'SSHShell'\n\ntestcase\\Radio2GEdit\\test_RADIO24G_EDIT_BOTH_1_STAND_G.py:19: AttributeError\n", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "12": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_BOTH_1_STAND_NG.py", "tests": {"0": {"status": "ERROR", "message": "self = <testcase.Radio2GEdit.test_RADIO24G_EDIT_BOTH_1_STAND_NG.Test_radio24G_Edit object at 0x00000170E3D59670>\n\n    @pytest.fixture(autouse=True, scope=\"function\")\n    def set_up(self):\n        self.timeOut = 60\n        self.standard = STANDARD_2G.MOD_NG\n        self.radio24GEditClt = radio24GEditClient()\n        self.radio2GViewClt = radio24GViewClient()\n        self.client2G = Wifi_lib()\n>       self.session = SSH_Lib(SSHShell=self.SSHShell)\nE       AttributeError: 'Test_radio24G_Edit' object has no attribute 'SSHShell'\n\ntestcase\\Radio2GEdit\\test_RADIO24G_EDIT_BOTH_1_STAND_NG.py:19: AttributeError\n", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "13": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_CHANNEL_1.py", "tests": {"0": {"status": "ERROR", "message": "self = <testcase.Radio2GEdit.test_RADIO24G_EDIT_CHANNEL_1.Test_radio24G_Edit object at 0x00000170E3D2A0A0>\n\n    @pytest.fixture(autouse=True, scope=\"function\")\n    def set_up(self):\n        self.timeOut = 60\n    \n        self.radio24GEditClt = radio24GEditClient()\n        self.radio2GViewClt = radio24GViewClient()\n        self.wrp = WirelessRadioPage(self.driver)\n        self.client2G = Wifi_lib()\n>       self.session = SSH_Lib(SSHShell=self.SSHShell)\nE       AttributeError: 'Test_radio24G_Edit' object has no attribute 'SSHShell'\n\ntestcase\\Radio2GEdit\\test_RADIO24G_EDIT_CHANNEL_1.py:20: AttributeError\n", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "14": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_CHANNEL_23.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO2G_EDIT_CHANNEL_1", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "15": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_CHANNEL_4.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO2G_EDIT_CHANNEL_1", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "16": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_CHANNEL_5.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO2G_EDIT_CHANNEL_1", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "17": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_CHANNEL_6.py", "tests": {"0": {"status": "ERROR", "message": "self = <testcase.Radio2GEdit.test_RADIO24G_EDIT_CHANNEL_6.Test_TraceRoute object at 0x00000170E3D47F40>\n\n    @pytest.fixture(autouse=True, scope=\"function\")\n    def set_up(self):\n        self.timeOut = 2\n>       self.banself.bandWith = BAND_WITH_API.B_20\nE       AttributeError: 'Test_TraceRoute' object has no attribute 'banself'\n\ntestcase\\Radio2GEdit\\test_RADIO24G_EDIT_CHANNEL_6.py:11: AttributeError\n", "test_name": "test_RADIO2G_EDIT_CHANNEL_1", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}}, "18": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_MISS_ATTB.py", "tests": {"0": {"status": "FAIL", "message": "       TypeError: list indices must be integers or slices, not str\n", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}, "19": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_MISS_REQID.py", "tests": {"0": {"status": "FAIL", "message": "       TypeError: list indices must be integers or slices, not str\n", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}, "20": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_REQID_1.py", "tests": {"0": {"status": "FAIL", "message": "           AssertionError: soft assertion failures:\n           1. [STATUS ERROR] Expected <11> to be equal to <0>, but was not.\n           2. [MESSAGE ERROR] Expected <Verify Fail> to be equal to <Success>, but was not.\n           3. [STATUS ERROR] Expected <11> to be equal to <0>, but was not.\n           4. [MESSAGE ERROR] Expected <Verify Fail> to be equal to <Success>, but was not.\n           5. [STATUS ERROR] Expected <11> to be equal to <0>, but was not.\n           6. [MESSAGE ERROR] Expected <Verify Fail> to be equal to <Success>, but was not.\n           7. [STATUS ERROR] Expected <11> to be equal to <0>, but was not.\n           8. [MESSAGE ERROR] Expected <Verify Fail> to be equal to <Success>, but was not.\n", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}, "21": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_REQID_2345.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "22": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_RES_1.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "23": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_RES_2.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "24": {"suite_name": "testcase/Radio2GEdit/test_RADIO24G_EDIT_RES_3.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_RADIO24G_EDIT_RES_6", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}}}, "date": "October 12, 2022", "start_time": 1665545789.3390465, "total_suite": 25, "status": "FAIL", "status_list": {"pass": "14", "fail": "3", "skip": "0", "error": "8", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "25"}